To find:
  The largest prime factor of a number

Approach: Find all the prime factors and choose the maximum.

Method I - Brute force
  Make all prime numbers from 1 to root n using a sieve
  Iterate from the end of the list and check whether n mod(p) = 0. If yes, break.

  Time Complexity - O(root(n))
  Space complexity - O(n) or O(10**6) - using a segmented sieve

Method II
  This method uses the fact if p, a prime is divisible by n, n/p will have all the prime factors which n has, other than p.
  This could be derived from the Fundamental Theorem of Arithmetic.
  
  The Algorithm:
    Let a function f(n,k) be defined such that, when called ,removes all multiples of k by dividing n by k(n/=k),if n is divisble by k.

    Mantain a max which checks the max k value
    Do f(n,2)
    Let k be 3 and while k<=root(n), call f(n,k).
    Keep incrementing k by 2.

    Now, after k crosses root(n), N could either be 0,1 or not be either.
    If n is 0, all the prime factors have been taken care of.
    If n is 1, the number is 1, which has no prime factors.
    Otherwise n is a prime which is a factor of n.
    n can't be composite
      Since the composite number could be broken into at least 2 prime factors 
      Each of these would have to be greater than root(n)(or else it would be taken care of in the loop).
      This would make n greater than n.
    Then n is a prime number, which is the max prime number.

