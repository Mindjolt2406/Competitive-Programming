Let the sum of the elements in array B be S_b. Now, we have to remove n elements from B, and add n elements of set A to this S_b to get the required answer. More formally, ans = S_b + sum of some n elements(a[I]-b[I]). Now, we see that if we construct an array C, where C[I] = A[I]-B[I]. Essentially, to maximise ans, we need to maximise this sum of n elements. We note that in any set, if we want to take n elements and maximise it's sum, we have to take the n greatest elements. This can be proved by an exchange argument. Now, since we need a linear time algorithm, we can't sort the elements to the get the greatest elements in C. However, if we use the quick select algorithm to find median in O(n), we can get the max n elements in O(n) time. This sum + S_b is the final answer.
